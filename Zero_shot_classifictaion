
Markdown
Lesson 13: Zero-Shot Image Classification
In the classroom, the libraries are already installed for you.
If you would like to run this code on your own machine, you can install the following:
    !pip install transformers
Load the model and the processor.
Here is some code that suppresses warning messages.
from transformers.utils import logging
logging.set_verbosity_error()
from transformers import CLIPModel
model = CLIPModel.from_pretrained(
    "./models/openai/clip-vit-large-patch14")
from transformers import AutoProcessor
processor = AutoProcessor.from_pretrained(
    "./models/openai/clip-vit-large-patch14")
More info about openai/clip-vit-large-patch14.

Load the image.
from PIL import Image
image = Image.open("./kittens.jpeg")
image

Set the list of labels from which you want the model to classify the image (above).
labels = ["a photo of a cat", "a photo of a dog"]
inputs = processor(text=labels,
                   images=image,
                   return_tensors="pt",
                   padding=True)
outputs = model(**inputs)
outputs
CLIPOutput(loss=None, logits_per_image=tensor([[18.9041, 11.7159]], grad_fn=<TBackward0>), logits_per_text=tensor([[18.9041],
        [11.7159]], grad_fn=<MulBackward0>), text_embeds=tensor([[-0.0031,  0.0028,  0.0291,  ...,  0.0227,  0.0088,  0.0132],
        [ 0.0091, -0.0039,  0.0203,  ...,  0.0310,  0.0025,  0.0109]],
       grad_fn=<DivBackward0>), image_embeds=tensor([[-3.1594e-02,  7.3143e-02, -6.0848e-04,  8.8355e-03,  3.3088e-02,
          8.4752e-03, -1.3071e-02, -6.0082e-03,  2.4028e-03,  7.9934e-03,
         -6.5093e-02, -2.8512e-02,  1.8172e-02,  3.8944e-02, -1.5353e-02,
          2.9794e-02, -9.1005e-03,  7.0498e-04, -6.8632e-03,  2.6676e-03,
         -2.6455e-02, -2.7599e-02,  8.9061e-03,  2.3567e-03, -4.8174e-02,
          8.6519e-05,  2.0355e-02,  1.1162e-02,  1.2210e-02,  1.2164e-02,
          1.4173e-02,  1.9187e-02,  1.5167e-02,  4.0699e-03, -4.5474e-02,
          9.9183e-03, -7.3702e-03, -1.2674e-03, -4.2590e-02,  8.4714e-03,
          3.9972e-02,  3.5804e-02, -1.4753e-02,  5.6063e-03,  1.1241e-02,
          1.8721e-02,  2.8468e-02,  8.9770e-03, -4.3563e-03, -1.3921e-02,
         -2.4466e-02, -3.8146e-04, -6.0560e-03,  2.1481e-02,  1.7916e-02,
         -1.4489e-02, -4.8000e-04, -2.1082e-03,  7.6648e-03,  1.1985e-02,
          3.3106e-02, -4.9733e-02,  7.0809e-04,  2.5580e-02,  1.7403e-02,
         -2.7512e-02,  6.4441e-03, -7.3655e-04,  5.8902e-03, -5.0639e-03,
          2.0092e-02, -4.0540e-02,  1.8965e-02, -3.0864e-02,  8.3063e-04,
         -7.9285e-03,  2.0762e-03, -4.6186e-02, -7.0521e-03,  1.1845e-03,
          6.5650e-03, -5.8188e-03,  2.5765e-02, -1.7675e-02, -3.5840e-02,
         -3.2164e-02, -4.5415e-02, -2.3243e-02,  1.3475e-02,  3.4238e-02,
         -3.8686e-02,  3.4016e-02, -1.3186e-02,  1.0938e-02,  2.5678e-02,
          4.5763e-02,  5.7385e-02, -1.6502e-02,  4.3591e-02,  1.3098e-02,
         -3.5419e-02,  2.6613e-02,  1.2353e-02,  2.5906e-02, -2.3537e-02,
         -1.7222e-02, -1.3133e-02, -3.3629e-02, -1.5209e-02, -5.0772e-02,
          2.1341e-02,  5.1715e-03,  7.1197e-03,  9.8946e-03, -3.5178e-02,
         -5.1742e-03,  6.3006e-03, -1.0370e-02, -1.2276e-02, -3.7246e-02,
          1.3445e-02, -2.3314e-02, -2.3382e-02, -1.1743e-02, -9.5012e-03,
         -5.4354e-02,  3.7149e-02,  3.3963e-03,  2.0530e-02, -7.4955e-03,
         -7.0452e-03,  3.2278e-02, -1.1498e-03, -3.1096e-02,  2.6525e-02,
          1.2749e-02,  2.3580e-02,  2.5054e-02, -2.9208e-02,  2.0238e-02,
          5.1917e-03, -2.7924e-02, -4.9504e-02, -3.9073e-04, -7.6092e-02,
          5.0480e-02,  1.1126e-02, -3.8628e-02, -1.2888e-02,  1.0364e-02,
         -1.0281e-02,  4.0417e-02, -2.9155e-02,  3.9344e-02, -2.1643e-02,
          4.5990e-02,  6.1562e-03,  5.8455e-02, -7.0963e-03, -2.0204e-02,
          2.4640e-02, -7.3315e-03, -2.2939e-02,  1.3955e-02,  4.1070e-03,
         -2.4667e-02, -3.4989e-02, -5.2653e-03, -2.1736e-02,  8.9420e-04,
          7.9459e-03, -1.8826e-02, -2.6818e-02,  8.9893e-03,  8.6416e-03,
          3.0746e-02,  1.0648e-02, -1.2346e-02,  1.8410e-02, -1.3082e-03,
          9.7276e-02, -9.9856e-03, -3.3905e-02, -4.5365e-02, -1.7048e-02,
         -2.7603e-02,  9.9468e-02, -1.5181e-03,  6.4525e-03,  2.0819e-03,
         -3.3420e-03,  3.0690e-04,  1.5341e-03,  1.9517e-03, -1.0134e-02,
          2.7802e-02,  1.7530e-02,  1.2842e-02, -2.6736e-02,  1.1640e-02,
          2.1499e-02,  2.0341e-02,  1.3428e-02, -3.3864e-02,  6.2469e-03,
         -6.3106e-03,  2.2791e-02,  1.7214e-03, -3.3639e-03, -2.5366e-02,
          2.8813e-02,  1.9597e-02, -3.0934e-02,  2.7195e-02, -2.5208e-02,
          3.7076e-02,  5.9417e-02,  4.0762e-02, -1.2774e-02, -1.4100e-04,
         -2.1948e-02, -8.5126e-04,  1.1314e-02,  4.2418e-02, -6.0840e-04,
         -2.9396e-03, -8.7037e-03,  3.4352e-02,  3.4045e-03,  7.1651e-03,
         -2.5965e-03, -1.5818e-02,  2.2355e-02,  3.1454e-02,  4.0121e-02,
          3.4628e-03, -3.5618e-02,  2.0595e-02,  3.6926e-02,  8.0931e-03,
         -2.9701e-02, -2.0268e-02, -2.5762e-02,  1.9987e-03, -2.1680e-02,
          6.7399e-03, -3.2109e-02,  5.1960e-02, -1.9453e-02,  9.7371e-04,
         -2.2269e-02,  2.0203e-02, -2.7423e-02, -3.6623e-02,  2.9017e-02,
         -9.1074e-06,  6.5010e-03,  4.8463e-02,  3.4247e-02, -4.2162e-03,
          1.8434e-02,  1.9428e-02, -2.1527e-02, -8.5871e-03,  1.2481e-02,
          1.8621e-03, -3.1823e-02, -8.6497e-03,  1.9468e-02,  1.1500e-03,
          3.2793e-02,  2.8984e-03, -3.3732e-02, -1.5349e-02,  3.4730e-02,
          1.2286e-02,  1.0350e-02,  4.2773e-03,  1.0658e-02, -2.2952e-02,
         -1.7384e-03, -9.4330e-02, -1.0510e-02, -8.0578e-02,  1.2847e-02,
         -1.2355e-03,  1.5886e-02,  1.7072e-02,  1.1498e-02,  2.3484e-02,
         -7.6426e-03, -2.6608e-03, -1.4018e-02,  1.2347e-02,  2.5744e-02,
         -1.8626e-02,  1.9968e-02, -3.3191e-02,  2.3385e-02,  4.9538e-02,
         -2.6342e-02,  3.1884e-02,  1.5555e-02, -4.0097e-03, -2.2281e-02,
          1.9865e-02,  2.9782e-02,  4.0520e-02,  1.6797e-02,  3.3104e-03,
          6.1625e-03,  7.7413e-03, -4.3241e-02, -5.3853e-02,  1.0415e-02,
          5.8277e-04, -7.3373e-02, -7.2072e-02,  4.4669e-04,  1.4264e-02,
          6.5389e-03,  3.2042e-03, -7.3628e-03, -1.1014e-02,  2.3360e-02,
          3.2329e-02,  3.6752e-02,  1.6277e-03,  1.2627e-02, -1.1252e-02,
          3.9758e-02,  5.0580e-02, -8.5664e-03, -7.6232e-04, -1.1295e-02,
          1.5338e-02,  1.0715e-02, -3.3042e-03, -1.2896e-02,  1.7243e-02,
          3.6710e-04, -3.2321e-02, -5.7882e-03, -2.9191e-02, -3.0872e-02,
         -2.2500e-04, -1.3690e-03,  2.8289e-03,  3.3493e-02, -6.8209e-03,
          2.2718e-02,  2.3291e-02, -1.2718e-03, -2.2178e-02, -4.7872e-02,
          2.7172e-02,  3.0429e-04,  1.1271e-03, -2.1091e-02,  1.7848e-03,
          8.1873e-03,  2.5819e-02, -1.0532e-03, -2.1740e-02,  1.9512e-03,
          2.9494e-02,  1.5277e-02, -6.7677e-02,  3.8119e-03,  1.7717e-02,
          3.6312e-02, -4.2543e-02, -2.6372e-02,  9.0402e-03,  2.7583e-02,
         -5.3353e-02, -2.7474e-03, -5.6964e-02, -3.0712e-02,  8.0514e-03,
          4.2383e-02,  8.4144e-03,  2.4426e-02,  6.0954e-03,  1.1809e-03,
          5.5165e-02, -3.3703e-02, -6.0831e-03,  7.8391e-03, -1.2550e-02,
         -5.3179e-02,  4.7374e-03,  1.0683e-02, -9.6380e-03,  1.9863e-02,
         -1.6002e-02, -1.2871e-02, -4.2597e-03,  2.3073e-02,  1.8429e-02,
          6.6297e-03, -1.7984e-02,  2.4378e-02, -3.5589e-02, -5.3075e-02,
         -3.4583e-02,  1.5231e-03, -3.8575e-02,  3.1016e-03, -1.8447e-02,
         -4.3316e-02, -1.3634e-02,  1.0900e-02, -4.4885e-01,  1.5686e-02,
          1.0339e-02,  4.6067e-03,  7.3741e-02,  3.6903e-03, -4.6897e-03,
          3.5621e-03, -1.0757e-02, -6.4114e-03,  3.0094e-02, -6.8156e-03,
         -1.0099e-02, -8.4084e-03,  2.0410e-02,  5.9516e-03,  7.3554e-03,
          2.8187e-02,  1.8237e-02, -1.6029e-02,  2.8039e-02,  5.3214e-02,
          1.1083e-01, -3.0065e-04,  2.0781e-02,  2.0782e-02,  3.3038e-02,
          6.1236e-02,  9.7231e-03,  2.2376e-02,  2.6198e-02, -3.1137e-02,
         -1.3464e-02,  9.4016e-03,  5.7376e-03,  6.5696e-04,  1.5401e-02,
         -5.4072e-02, -3.4217e-02, -2.3013e-02,  4.4904e-02,  6.0023e-03,
          2.9391e-03, -4.5315e-03, -2.4535e-02, -4.6659e-03,  3.3743e-03,
          2.5481e-02, -1.4173e-02,  9.3306e-03,  1.4152e-01, -1.3918e-02,
          1.1636e-02, -1.8263e-03,  4.7347e-02, -6.1782e-03,  3.7584e-02,
          1.0648e-03,  2.4787e-03,  2.1986e-02, -1.2089e-02, -1.3593e-02,
          2.3821e-02,  2.5132e-02, -2.8683e-03,  1.8589e-03, -2.2728e-02,
          2.6455e-03, -1.1094e-02, -2.6051e-02, -2.9490e-02,  2.5770e-02,
          2.6804e-03,  1.1983e-04, -1.4805e-02, -4.6252e-02,  2.4960e-02,
         -2.9269e-02,  3.2147e-02, -1.2887e-02,  1.5465e-03,  3.1087e-02,
         -3.3309e-02,  6.0908e-02, -1.7476e-02, -2.8730e-02, -1.4807e-03,
         -9.6842e-03, -9.1644e-03, -4.9799e-02, -1.2693e-02,  7.5169e-03,
         -7.4463e-03, -2.7937e-02, -2.1875e-02, -6.0950e-04, -4.0123e-03,
          3.0791e-02,  1.6025e-02, -9.2272e-03, -3.3008e-03,  5.1479e-05,
          3.2686e-02, -2.7117e-02,  1.5845e-02,  2.8578e-03,  1.2663e-02,
          1.7274e-02, -1.5355e-02,  2.2047e-02, -2.1921e-02, -8.6465e-03,
          1.1817e-02, -1.3897e-02,  3.9782e-03,  3.5045e-02, -1.9475e-02,
         -8.8259e-03, -1.5545e-03,  3.3621e-02, -3.3691e-02,  3.6791e-02,
          1.9537e-03, -1.0808e-02, -7.2295e-04, -4.6083e-02, -2.9483e-02,
         -2.9616e-02, -1.2670e-02, -1.6432e-04,  9.8972e-03, -5.4079e-02,
         -5.4280e-02,  5.6100e-03,  3.5348e-03,  2.1702e-02,  2.4056e-02,
         -7.5780e-02,  6.9264e-02,  1.7879e-02,  8.1619e-03,  1.9018e-03,
         -1.5757e-02, -1.2863e-02,  2.3128e-02,  2.3781e-02, -3.1077e-02,
          1.3875e-01,  2.6850e-02, -1.2141e-02,  3.2050e-02, -7.7507e-02,
         -2.4027e-02,  1.6555e-03, -2.7325e-03, -3.9161e-02,  2.5327e-02,
          3.2035e-02,  4.2793e-02,  1.1515e-02, -9.5609e-03,  2.3922e-04,
          1.9599e-02,  1.2818e-02,  8.7465e-03,  1.2943e-03, -2.3948e-02,
          1.6104e-02,  2.6292e-02, -1.2102e-02,  6.7069e-03,  8.5058e-03,
         -8.5876e-03, -4.2545e-03, -3.1043e-02, -1.7689e-02,  7.8872e-03,
         -3.4054e-03, -3.9125e-02,  1.1464e-02, -1.4457e-02,  2.8908e-02,
          3.4043e-02, -7.8629e-03, -1.9601e-02,  1.5263e-03, -2.5012e-02,
         -4.2395e-03,  2.2118e-03, -6.9533e-03,  4.6416e-02, -2.3147e-02,
         -1.1616e-01, -4.0813e-02, -6.6223e-03, -4.0658e-02,  2.9167e-02,
          6.6187e-03, -1.7927e-02, -3.9095e-03, -2.7031e-03, -5.2507e-03,
         -4.7673e-03,  2.9670e-02,  1.2227e-03,  6.7270e-02, -1.5234e-02,
          4.2697e-02,  8.0636e-03,  1.7937e-02,  2.8018e-02,  4.0434e-02,
         -6.7447e-03, -5.6948e-04, -2.3822e-03,  1.0871e-02, -1.1388e-02,
         -2.5824e-02,  2.5135e-02,  4.3797e-03,  3.5918e-02, -1.0794e-02,
          8.6512e-02, -2.6198e-02, -2.6901e-02,  7.7007e-03,  1.2901e-02,
         -9.3563e-03, -1.2439e-02,  3.5308e-03,  2.3589e-02,  4.8006e-01,
         -1.9519e-02, -5.9958e-03, -8.0213e-03,  1.2932e-02,  2.6459e-02,
         -1.0971e-02, -5.0866e-02, -3.2936e-02, -3.4898e-02,  3.3433e-03,
         -3.5985e-02,  1.2972e-02,  2.2943e-02,  6.6313e-03,  5.1901e-02,
         -5.1910e-02, -1.6529e-02, -4.1744e-02, -2.2921e-02,  1.1156e-03,
         -2.2640e-02,  6.4307e-03,  1.0166e-02,  1.0053e-02,  1.7882e-02,
          2.9116e-03, -3.5842e-03, -1.2211e-02, -5.4163e-02,  8.1245e-03,
         -8.7754e-03, -6.0105e-03,  3.0906e-02, -1.7902e-03,  2.6545e-02,
          7.2276e-03, -1.9290e-02,  5.2552e-03,  2.6408e-02,  5.3849e-03,
          2.7049e-02, -1.5462e-02,  2.6013e-02, -1.1575e-02, -2.9970e-02,
         -1.3677e-02,  4.3331e-03,  4.4033e-02,  2.1993e-02,  1.6632e-02,
         -1.6682e-02, -1.3869e-02,  2.8647e-03, -1.1098e-02, -2.0379e-02,
         -8.6569e-03, -1.1626e-02,  2.5312e-02,  4.2398e-02, -1.8522e-02,
         -3.7229e-03, -1.2763e-02, -3.8206e-03,  7.0125e-02,  3.0947e-03,
         -1.5072e-02,  9.3921e-04, -2.0701e-02, -6.9146e-03,  2.9308e-02,
         -3.5177e-02,  2.2513e-02,  1.6114e-02,  1.6239e-02,  8.3135e-03,
         -8.3226e-03, -7.0733e-03, -3.0811e-02,  1.1680e-02, -7.8671e-02,
         -1.3418e-02,  7.9883e-03,  1.5208e-02, -1.8516e-02, -1.5661e-02,
         -1.4979e-02, -8.2909e-03,  7.5795e-04, -2.1981e-02, -9.7378e-03,
          1.7318e-02, -2.0592e-02, -2.2093e-02, -1.4671e-02, -2.8803e-02,
          2.9555e-03, -4.0982e-02,  7.8117e-03,  1.0134e-02, -1.1990e-02,
         -1.4194e-02,  2.4258e-02, -2.0680e-02,  3.1344e-02, -2.3676e-02,
          4.4455e-03,  3.3145e-02,  2.4230e-02,  5.8416e-03,  4.9579e-02,
         -3.2810e-02,  5.6529e-03, -2.5444e-02,  3.0413e-02,  3.8133e-04,
          1.3244e-02,  5.0576e-03,  8.8226e-03, -1.1385e-02,  4.0256e-02,
         -5.1002e-02,  5.3216e-04, -2.6412e-03]], grad_fn=<DivBackward0>), text_model_output=BaseModelOutputWithPooling(last_hidden_state=tensor([[[-3.8838e-01,  2.2944e-02, -5.2197e-02,  ..., -4.8988e-01,
          -3.0660e-01,  6.7454e-02],
         [ 2.9033e-02, -1.3258e+00,  3.0846e-01,  ..., -5.2568e-01,
           9.7681e-01,  6.6517e-01],
         [ 1.1565e+00,  1.3184e-01,  7.8949e-01,  ..., -2.1024e+00,
          -1.1519e+00, -3.3113e-01],
         ...,
         [ 5.8302e-01, -1.3718e-01,  2.1518e+00,  ..., -1.0520e+00,
          -1.5292e-01,  9.6754e-02],
         [-7.8088e-02,  9.8267e-01,  6.9148e-01,  ..., -2.8869e+00,
           2.0970e-02, -4.1268e-01],
         [-1.2166e+00, -5.1482e-01,  4.8002e-01,  ..., -1.3832e-01,
           8.1141e-01,  5.5702e-01]],

        [[-3.8838e-01,  2.2944e-02, -5.2197e-02,  ..., -4.8988e-01,
          -3.0660e-01,  6.7454e-02],
         [ 2.9032e-02, -1.3258e+00,  3.0846e-01,  ..., -5.2568e-01,
           9.7681e-01,  6.6517e-01],
         [ 1.1565e+00,  1.3184e-01,  7.8949e-01,  ..., -2.1024e+00,
          -1.1519e+00, -3.3113e-01],
         ...,
         [ 5.8302e-01, -1.3717e-01,  2.1518e+00,  ..., -1.0520e+00,
          -1.5293e-01,  9.6754e-02],
         [-1.7998e+00,  7.1469e-01,  9.7601e-01,  ..., -1.3804e+00,
          -9.1295e-01,  1.2957e-02],
         [-9.5111e-01,  7.5052e-03,  1.3867e-01,  ...,  6.0282e-04,
           2.2237e-01,  8.9224e-01]]], grad_fn=<NativeLayerNormBackward0>), pooler_output=tensor([[-1.2166e+00, -5.1482e-01,  4.8002e-01,  ..., -1.3832e-01,
          8.1141e-01,  5.5702e-01],
        [-9.5111e-01,  7.5052e-03,  1.3867e-01,  ...,  6.0282e-04,
          2.2237e-01,  8.9224e-01]], grad_fn=<IndexBackward0>), hidden_states=None, attentions=None), vision_model_output=BaseModelOutputWithPooling(last_hidden_state=tensor([[[-0.5297, -0.7713,  0.4655,  ..., -0.3993, -0.0721, -0.3703],
         [ 0.8688,  0.1690,  0.6678,  ...,  0.5126, -1.1465, -0.1258],
         [ 1.1742, -0.7551,  0.0396,  ...,  0.7166, -0.5458,  0.0031],
         ...,
         [ 0.8636,  0.2223,  0.6411,  ...,  0.5242, -0.8104,  0.0170],
         [ 0.6842, -1.1056, -0.2486,  ...,  0.7901,  0.4862, -0.0949],
         [ 0.8934,  0.0066,  0.9235,  ...,  0.5707, -0.8436, -0.2182]]],
       grad_fn=<AddBackward0>), pooler_output=tensor([[-0.9326, -1.3289,  0.7919,  ..., -0.3337, -0.0479, -0.7106]],
       grad_fn=<NativeLayerNormBackward0>), hidden_states=None, attentions=None))
outputs.logits_per_image
tensor([[18.9041, 11.7159]], grad_fn=<TBackward0>)
probs = outputs.logits_per_image.softmax(dim=1)[0]
probs
tensor([9.9925e-01, 7.5487e-04], grad_fn=<SelectBackward0>)
probs = list(probs)
for i in range(len(labels)):
  print(f"label: {labels[i]} - probability of {probs[i].item():.4f}")
label: a photo of a cat - probability of 0.9992
label: a photo of a dog - probability of 0.0008
